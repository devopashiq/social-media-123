{"version":3,"sources":["script.js"],"names":["darkButton","document","getElementById","lightButton","body","querySelector","radioButtons","querySelectorAll","setDarkMode","classList","add","remove","checked","localStorage","setItem","setLightMode","colorModeFromLocalStorage","getItem","colorModeFromPreferences","window","matchMedia","matches","loadAndUpdateColor","toggleButton","button","addEventListener","forEach","event"],"mappings":"AAAA,aAAA,IAAMA,WAAYC,SAASC,eAAe,QACpCC,YAAaF,SAASC,eAAe,SACrCE,KAAMH,SAASI,cAAc,QAC7BC,aAAaL,SAASM,iBAAiB,0BAEvCC,YAAc,WAChBJ,KAAKK,UAAUC,IAAI,QACnBN,KAAKK,UAAUE,OAAO,SACtBX,WAAWY,SAAU,EACrBC,aAAaC,QAAQ,YAAY,OACrC,EACMC,aAAe,WACjBX,KAAKK,UAAUC,IAAI,SACnBN,KAAKK,UAAUE,OAAO,QACtBR,YAAYS,SAAU,EACtBC,aAAaC,QAAQ,YAAY,QACrC,EAEME,0BAA4B,WAC9B,OAAOH,aAAaI,QAAQ,YAC9B,EAGMC,yBAA2B,WAC/B,OAAOC,OAAOC,WAAW,gCAAgCC,QAC3C,OACA,OAChB,EAEMC,mBAAqB,WAGf,UADIN,6BAA+BE,4BACzBV,cAAgBO,cACtC,EAEIQ,aAAc,SAACC,GACjBA,EAAOC,iBAAiB,SAAS,WAC7BzB,WAAWY,QAAUJ,cAAgBO,cACvC,GACN,EAEAT,aAAaoB,QAAQH,cAErBJ,OAAOC,WAAW,gCACXK,iBAAiB,UAAU,SAACE,GAC3BA,EAAMN,QAAWb,cAAgBO,cACnC,IAGNO","file":"script.js","sourcesContent":["const darkButton =document.getElementById('dark');\r\nconst lightButton =document.getElementById('light');\r\nconst body =document.querySelector('body');\r\nconst radioButtons=document.querySelectorAll(\".toggle__wrapper input\");\r\n\r\nconst setDarkMode = () =>{\r\n    body.classList.add('dark');\r\n    body.classList.remove('light');\r\n    darkButton.checked = true;\r\n    localStorage.setItem(\"colorMode\",\"dark\");\r\n}\r\nconst setLightMode = () =>{\r\n    body.classList.add('light');\r\n    body.classList.remove('dark');\r\n    lightButton.checked = true;\r\n    localStorage.setItem(\"colorMode\",\"light\");\r\n}\r\n\r\nconst colorModeFromLocalStorage = () => {\r\n    return localStorage.getItem('colorMode');\r\n  };\r\n\r\n\r\n  const colorModeFromPreferences = () => {\r\n    return window.matchMedia('(prefers-color-scheme: dark)').matches \r\n                ? 'dark'\r\n                : 'light' // If preference is set or does not match anything (light is default)\r\n  };\r\n  \r\n  const loadAndUpdateColor = () => {\r\n    // local storage has precendence over the prefers-color-scheme\r\n    const color = colorModeFromLocalStorage() || colorModeFromPreferences();\r\n    color === 'dark' ?  setDarkMode() : setLightMode();\r\n  };\r\n\r\nconst toggleButton =(button) =>{\r\n    button.addEventListener('click', () => {\r\n        darkButton.checked ? setDarkMode() : setLightMode();\r\n      });\r\n}\r\n\r\nradioButtons.forEach(toggleButton);\r\n\r\nwindow.matchMedia('(prefers-color-scheme: dark)')\r\n      .addEventListener('change', (event) => {\r\n        event.matches ?  setDarkMode() : setLightMode();\r\n      });\r\n      \r\n// Load the right color on startup - localStorage has precedence\r\nloadAndUpdateColor();"]}